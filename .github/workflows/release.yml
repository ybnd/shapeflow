name: release
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  check-version:
    runs-on: ubuntu-latest
    
    outputs:
      this-tag: ${{ steps.this-tag.outputs.tag }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Get tag name
        id: this-tag
        run: |
          TAG=${GITHUB_REF#refs/*/}
          echo "$TAG"
          echo "::set-output name=tag::$TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Should match __version__ in shapeflow/__init__.py
        run: |
          cat shapeflow/__init__.py | grep "__version__ = "
          cat shapeflow/__init__.py | grep "__version__ = \"$TAG\""

      - name: Should match version in shapeflow/setup/ploy
        run: |
          cat shapeflow/setup/ploy | grep "version: "
          cat shapeflow/setup/ploy | grep "version: $TAG"

      - name: Should match version in ui/package.json
        run: |
          cat ui/package.json | grep "\"version\": "
          cat ui/package.json | grep "\"version\": \"$TAG\""

      - name: Should have a changelog entry
        run: |
          cat docs/source/changelog.rst | grep -P "^$TAG$"


  artifacts:
    runs-on: ubuntu-latest
    needs: [check-version]

    outputs:
      tag: ${{ steps.gitploy.outputs.tag }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install npm dependencies
        working-directory: ui
        run: npm install

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install gitploy
        run: |
          git clone https://github.com/ybnd/gitploy ~/gitploy
          cd ~/gitploy
          python setup.py install

      - name: Generate deployment script
        id: gitploy
        run: |
          cp shapeflow/setup/ploy .ploy
          echo "::set-output name=tag::$( cat .ploy | sed -n -e 's/^.*version: //p')"
          python -m gitploy .

      - name: Upload
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.check-version.outputs.this-tag }}
          file: deploy_shapeflow-${{ steps.gitploy.outputs.tag }}.py
          prerelease: true

      - name: Compile ui
        working-directory: ui
        run: npm run build

      - name: Tarball ui
        run: |
          cd ui && tar -czvf "../dist-${{ steps.gitploy.outputs.tag }}.tar.gz" dist

      - name: Upload
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.check-version.outputs.this-tag }}
          file: dist-${{ steps.gitploy.outputs.tag }}.tar.gz
          prerelease: true

  test-deploy:
    needs: [artifacts]
    if: ${{ needs.artifacts.outputs.tag }}

    env:
      TAG: ${{ needs.artifacts.outputs.tag }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: 3.7
          - os: ubuntu-latest
            python-version: 3.8
          - os: windows-latest
            python-version: 3.8

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Download deployment script
        run: curl -LO "https://github.com/ybnd/shapeflow/releases/download/${{ env.TAG }}/deploy_shapeflow-${{ env.TAG }}.py"

      - name: Run deployment script
        run: python "deploy_shapeflow-${{ env.TAG }}.py" -y

      - name: Should be able to run sf.py
        run: |
          python sf.py --version

      - name: Should have a ui/dist/ directory
        run: |
          tree ui/dist/
