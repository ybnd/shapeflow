name: build
on:
  push:
    branches:
      - main
      - dev/*

jobs:
  tox:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: 3.7
            tox: "py37-type"
          - python-version: 3.7
            tox: "py37-test"
          - python-version: 3.8
            tox: "py38-type"
          - python-version: 3.8
            tox: "py38-cover"

    env:
      TOX_ENV: ${{ matrix.tox }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Cache tox
        uses: actions/cache@v2
        with:
          path: test/.tox
          key: ${{ runner.os }}-tox-${{ matrix.tox }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-tox-${{ matrix.tox }}-

      - name: Install tox
        run: pip install tox

      - name: Run tox
        run: |
          tox -c test/tox.ini -e $TOX_ENV --notest
          tox -c test/tox.ini -e $TOX_ENV

      - name: Send coverage report
        if: ${{ endsWith(matrix.tox, 'cover') }}
        uses: codecov/codecov-action@v1
        with:
          flags: backend,${{ runner.os }}

  node:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - node_version: 14
            coverage: true

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up backend dependencies
        run: pip install -r requirements.txt

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache yarn
        uses: actions/cache@v2
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('ui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node-version }}-
            ${{ runner.os }}-yarn-

      - name: Install yarn dependencies
        run: cd ui && yarn install

      - name: Build UI
        run: cd ui && yarn build

      - name: Run tests
        run: cd ui && yarn test

      - name: Send coverage report
        if: ${{ matrix.coverage }}
        uses: codecov/codecov-action@v1
        with:
          flags: frontend,${{ runner.os }}